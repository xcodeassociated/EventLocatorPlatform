version: "3"
services:
  postgres:
    image: postgres:latest
    container_name: "postgres"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres-data:/var/lib/postgresql/data
      - ./entrypoint/postgres-entrypoint/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - int-dev-net

  postgres-keycloak:
    image: postgres:latest
    volumes:
      - ./volumes/postgres_data_keycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - 5433:5432
    networks:
      - int-dev-net

  keycloak:
    image: xcodeassociated/elp-keycloak:0.0.1
    environment:
      DB_ADDR: postgres-keycloak
      DB_PORT: 5432
      DB_VENDOR: POSTGRES
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      PROXY_ADDRESS_FORWARDING: 'true'
    command: ["-b", "0.0.0.0", "-Dkeycloak.profile.feature.docker=enabled"]
    ports:
      - 9090:8080
    expose:
      - "9090"
    depends_on:
      - postgres-keycloak
      - dev-kafka-broker-1
    links:
      - "postgres-keycloak:postgres-keycloak"
      - "dev-kafka-broker-1:dev-kafka-broker-1"
    networks:
      - int-dev-net

  dev-kafka-zookeeper:
    container_name: dev-kafka-zookeeper
    hostname: dev-kafka-zookeeper
    restart: unless-stopped
    image: wurstmeister/zookeeper
    ports:
      - "127.0.0.1:2181:2181"
    volumes:
      - ./volumes/dev-kafka-zookeeper-data:/data
    networks:
      - int-dev-net

  dev-kafka-broker-1:
    container_name: dev-kafka-broker-1
    hostname: dev-kafka-broker-1
    restart: unless-stopped
    image: wurstmeister/kafka
    ports:
      - "127.0.0.1:9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: dev-kafka-broker-1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: dev-kafka-zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "dev_sample_topic:1:1:compact"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/dev-kafka-data:/kafka
    networks:
      - int-dev-net

  mongo0:
    image: mongo:latest
    container_name: mongo0
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=mongo
      - MONGO_NON_ROOT_USERNAME=user
      - MONGO_NON_ROOT_PASSWORD=user
    expose:
      - "27017"
    ports:
      - "27017:27017"
    volumes:
      - ./volumes/mongo/mongo-data-0:/data/db
      - ./volumes/mongo/mongo-db-config-0:/data/configdb
      - ./entrypoint/mongodb-entrypoint/single/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    restart: always
    networks:
      - int-dev-net

  redis:
    container_name: redis
    hostname: redis
    image: "redis:latest"
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redis-data:/data
    networks:
      - int-dev-net

networks:
    int-dev-net:
        driver: bridge
